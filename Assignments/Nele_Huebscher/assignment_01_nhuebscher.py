# -*- coding: utf-8 -*-
"""01_Assignment_Python.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1lfvJKvUcZrCoBmK_AO-mO3q7KCtEfQ99

# Assignment 01
##### Python Basics I

This tutorial was written by Terry Ruas (University of Göttingen). The references for external contributors for which this material was anyhow adapted/inspired are in the Acknowledgments section (end of the document).

## Task 01 – Hello World!
Write a simple program that asks the user to input a name and outputs a simple greeting, such as ‘Hi Name! Nice to meet you!’ and in the other line, ‘Welcome to the Programing Course!’. 

*Hint: Check out the input () and print() function in Python.*
"""

print('What is your name?')
userName = input()
print('Hi ' + userName + '! Nice to meet you!')
print('Welcome to the Python Course!')

"""## Task 02 – Reversed Words
Write a program that reads in a word provided by the user and prints the word in a reversed order. For example, if the input is hello, the output should be ‘olleh’. 

- Use a loop structure 
- Use just array indexes 

"""

print('Please insert a word') #ask user to insert a word that will be printed in reversed order
yourWord = input()
reversedWord = ''

#uses a loop structure
for i in range(len(yourWord)):
    reversedWord = reversedWord + yourWord[len(yourWord)-1-i]

print(reversedWord)
#uses only array indexes
print(yourWord[::-1])

"""## Task 03 –  Fibonacci Numbers
Write a program that reads in an upper bound (number) provided by the user and prints the sequence of Fibonacci numbers that are less or equal to the number given by the user. Use a while-loop for this task. 

The Fibonacci sequence is defined as 
$ F_{n}=F_{n−1}+F_{n−2}$. Use $F_{0}=0$ and $F_{1} = 1$ as seed values.  

For example, if the user inputs 6, the output should be 0, 1, 1, 2, 3, 5. 




"""

def fibonnaci (yourNumber):
    # inserting first two seed values in list
    f = [0,1]
    # using a loop to insert the Fibonacci Numbers in List
    n = 0
    i = 0
    while True:
        n = f[i] + f[i+1]
        # only insert a number if the number is smaller than yourNumber, else break 
        if (n <= yourNumber):
            f.insert(i+2, n)
            i = i + 1
        else:
            break
    print(f)


print('Please insert your number')
yourNumber = input()
fibonnaci(int(yourNumber))

"""## Task 04 – Selective Printing 

Write a program that reads in an upper bound (number) provided by the user and prints all integer numbers that are less or equal to the upper bound except the integer numbers that are divisible by 3. Use the continue statement. For example, if the user enters 6 as the upper bound, the output should be 0, 1, 2, 4, 5.  
"""

def upperBound (yourNumber):
    # define list and variables to iterate
    f = [0]
    i = 1
    n = 0
    
    # check whether a number can be divided by 3 while it is smaller than yourNumber
    while n < yourNumber:
        #if the number can be divided by 3, dont insert in the list but continue with the next item
        if (n % 3 == 0):
            n = n + 1
            continue
        f.insert(i,n)
        n = n + 1
        i = i + 1
    print(f)

print('Please insert your number')
yourNumber = input()
upperBound(int(yourNumber))

"""## Task 05 – Triangle Checking   

Write a Python program that asks the user to input the lengths of the sides in a triangle and outputs whether the triangle is equilateral, isosceles, or scalene. The program should also check for the Triangle inequality $(z < x + y)$,  and prompt the user for a valid input. 

- An equilateral triangle is a triangle in which all three sides are of equal length. 
- An isosceles triangle is a triangle with (at least) two sides of equal length. 
- A scalene triangle is a triangle in which all three sides have different lengths. 

For example, if the user inputs a=3, b=4, c=5, the triangle is scalene. 

"""

def triangleCheck ():

    print('Please insert three numbers to build a triangle')
    while True:
        a = int(input())
        b = int(input())
        c = int(input())
        #Triangle inequality means, one side of the triangle may only be as long as the sum of the other two sides
        if (a <= b + c and b <= a + c and c <= b + a):
            break
        print('With your numbers, it is not possible to build a triangle. Please insert three numbers again')

    #check whether the triangle is equilateral
    if (a == b == c):
        print('The triangle is equilateral')
     #check whether the triangle is isosceles
    elif (a == b or b == c or a ==c):
        print('The triangle is isosceles')
    #check whether the triangle is scalene
    else:
        print('The triangle is scalene')


triangleCheck()

"""## Task 06 – Decimal to Octal Conversion 

Write a program that reads a non-negative integer number in the decimal representation provided by the user and prints the octal representation of the number. For example, if the user enters 167, the output should be 247.  

Write a more general program that reads in a non-negative number (potentially including decimal places) in the decimal representation provided by the user and prints the octal representation of the number. For example, if the user enters 25.11, the output should be 31.0702436560507534. 
"""

def decimalToOctalInt (yourNumber):
    deci = int(yourNumber)
    #prints the octal representation of an integer without '0o'
    print(oct(deci).lstrip("0o"))

print('Please insert your number')
yourNumber = input()

decimalToOctalInt(yourNumber)

"""## Acknowledgements

Redmond, Hsu, Saini, Gupta, Ramsey, Kondrich, Capoor, Cohen, Borus, Kincaid, Malik, and many others. - Stanford CS41
"""

